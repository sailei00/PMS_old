<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"	
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		   xmlns:context="http://www.springframework.org/schema/context"
		   xmlns:mvc="http://www.springframework.org/schema/mvc" 
		   xmlns:tx="http://www.springframework.org/schema/tx"
		   xmlns:aop="http://www.springframework.org/schema/aop"
		   xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
          								 http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd
            							http://www.springframework.org/schema/mvc        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
            							http://www.springframework.org/schema/tx           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            							http://www.springframework.org/schema/aop        http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- 开启 IOC相关annotation，实现IOC-->
 	<context:annotation-config/>
	<!-- 开启 @Controller ，为所有的Controller自动做映射-->
	<mvc:annotation-driven />
	<context:component-scan base-package="com.fdmy"/>
	
	
	
	<!-- 引入jdbc配置文件 -->      
    <context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- ViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.fdmy.exception.UserException">error</prop>
				<prop key="com.fdmy.exception.DBException">error</prop>
			</props>
		</property>
	</bean>

	<!-- 配置数据源 -->
	<bean id="jdbcDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${driver}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>
		<property name="username">
			<value>${username}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
	</bean>
	
	<!--  sqlSessionFactory  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="jdbcDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!--  sesstionTemplate  -->
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	
	 <!-- ================================事务相关控制=================================================    -->
  <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">     
          <property name="dataSource" ref="jdbcDataSource"></property>
    </bean>     
  
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="delete*" propagation="REQUIRED" read-only="false"   rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
      <tx:method name="add*" propagation="REQUIRED" read-only="false"       rollback-for="java.lang.RuntimeException" />
      <tx:method name="update*" propagation="REQUIRED" read-only="false"   rollback-for="java.lang.Exception" />
      
      <tx:method name="query*" propagation="SUPPORTS"/>
      <tx:method name="load*" propagation="SUPPORTS"/>
      <tx:method name="get*" propagation="SUPPORTS"/>
      <tx:method name="find*" propagation="SUPPORTS"/>
    </tx:attributes>
  </tx:advice>
  
  <aop:config>    
    <aop:pointcut id="pc" expression="execution(* com.fdmy.service.*.*(..))" /> <!--把事务控制在Service层-->
    <aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
  </aop:config>
  
  
	<!-- 配置Spring的事务处理 -->
</beans>
